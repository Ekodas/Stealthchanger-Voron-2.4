# If you are using CAN, define the board info
[mcu EBBT2]
canbus_uuid: 3bf2472f7d0b

# Extruder Example, change as needed. If this is T1, then should be something like extruder1
[extruder2]
step_pin: EBBT2:PD0
dir_pin: EBBT2:PD1
enable_pin: !EBBT2:PD2
microsteps: 16
full_steps_per_rotation: 200 # Single-turn pulse number (200 is 1.8 degrees, 400 is 0.9 degrees)
rotation_distance: 47.088 # Driving pulley circumference mm
## Calibration step value: rotation_distance = <old rotation_distance> * <actual extrusion length> / <requested extrusion length>
gear_ratio: 9:1 # Reduction ratio (Galileo gear ratio 7.5:1 and comment out this line; BMG is 50:17, output shaft in front, input shaft in rear)
nozzle_diameter: 0.400 # Nozzle diameter
filament_diameter: 1.750 # filament diameter
heater_pin: EBBT2: PB13 # Extrusion head heating rod control pin setting (e0)
sensor_type: ATC Semitec 104GT-2 #Generic 3950 #MAX31865 # Sensor model
sensor_pin: EBBT2: PA3 # Extrusion head sensor Pin (T_E0)
max_power: 1.0 # Heating rod PWM maximum output power
min_temp: -235 # Minimum temperature of extruder
max_temp: 305 # Maximum temperature of extruder
min_extrude_temp: 150 # The minimum extrusion temperature of the heating rod (the extruder can only perform extrusion when it reaches this temperature)
pressure_advance: 0.04 # Extruder pressure advance parameter
pressure_advance_smooth_time:0.020 # Smooth advancement time - the default value is 0.040
#Nozzle temperature PID calibration command: "PID_CALIBRATE HEATER=extruder TARGET=245
control=pid
pid_Kp=36.913 
pid_Ki=13.671 
pid_Kd=24.916
#pid_Kp=35.147
#pid_Ki=13.783 
#pid_Kd=23.406
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
max_extrude_cross_section: 5


[tmc2209 extruder2]
uart_pin: EBBT2: PA15
interpolate: False
run_current: 0.65
sense_resistor: 0.110
stealthchop_threshold: 0 # Silence threshold (if silence is not required, please change the value to 0)

# Change tool number if needed here
[fan_generic T2_partfan]
pin: EBBT2:PA0

# Change tool number if needed here
[heater_fan T2_hotend_fan]
pin: EBBT2:PA1
# Change extruder tool number if needed here
heater: extruder2
heater_temp: 50.0
kick_start_time: 0.5
tachometer_pin: ^EBBT2:PB9

#Change tool number if needed in the next line, as well ast the last line
[gcode_macro T2]
variable_color: ""
gcode:
  SELECT_TOOL T=2

#change the tool numbers to the tool you are configuring, ie T0, T1, etc
[tool T2]
#change this too
tool_number: 2
#if this were T1, then this would be extruder1, etc
extruder: extruder2
#Change T0_partfan to tool number
fan: T2_partfan
gcode_x_offset: -0.4
gcode_y_offset: 0.4
gcode_z_offset: -0.188
params_type: 'sc'
#This is the path the tool change takes. Shouldn't have to change it. Unless
#you are using a custom dock
params_sc_path: [{'y':9.5 ,'z':4}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-10, 'y':0}, {'z':-10, 'y':16}]
#These are build specific, its where the tool is sititng in it's dock.
params_park_x: 150
params_park_y: 3
params_park_z: 248.0
params_safe_y: 110
# For InputShaper run per tool and enter the frequency here
params_input_shaper_type_x: '2hump_ei'
params_input_shaper_freq_x: 86.4
params_input_shaper_damping_ratio_x: 0.053
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_y: 36.4
params_input_shaper_damping_ratio_y: 0.052

# Change tool number if needed
[tool_probe T2]
pin: ^EBBT2:PB6
tool: 2
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
z_offset: -1.10 #-0.95 # Z axis-sensor relative nozzle offset
# drop_first_result: True # enable is on danger-klipper
speed: 10.0
samples: 1
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder

[adxl345 T2]
cs_pin: EBBT2:PB12
spi_software_sclk_pin: EBBT2:PB10
spi_software_mosi_pin: EBBT2:PB11
spi_software_miso_pin: EBBT2:PB2
axes_map: x,z,y

[filament_switch_sensor Toolhead_T2]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode: M118 Runout detected on Toolhead T2
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: EBBT2:PB8
#   The pin on which the switch is connected. This parameter must be
#   provided.